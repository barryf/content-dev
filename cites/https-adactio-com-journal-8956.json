{
  "type": [
    "h-cite"
  ],
  "properties": {
    "url": [
      "https://adactio.com/journal/8956"
    ],
    "published": [
      "2015-05-20T16:33:46Z"
    ],
    "content": [
      "When I give talks or workshops, I sometimes get a bit ranty. One of the richest seams of rantiness comes from me complaining about how we web designers and developers are responsible for making the web a hostile place. “Stop getting the web wrong!” I might shout, like an old man yelling at a cloud. I point to services like Instapaper and Readability and describe their existence as a damning indictment of our work. \n\n Don’t get me wrong—I really like Instapaper, Readability, RSS readers, or any other tools that allow people to read what they want when they want it. But think about their fundamental selling point: get to the content you want without having to wade through the cruft. That cruft was put there by us. \n\n So-called modern web design and development is damage that people have to route around. \n\n (Ooh, I can feel myself coming over all ranty and angry again! Calm down, Jeremy, calm down!) \n\n And. Breathe. \n\n Now there’s a new tool to the add to the list: Facebook Instant. Again, I think it’s actually pretty great that this service exists. But once again, it should make us ashamed of the work we’re collectively producing. \n\n In this case, the service is—somewhat ironically—explicitly touting the performance benefits of not going to a website to read an article. Quite right. \n\n PPK points to tools as the source of the problem and Marco Arment agrees: \n\n \n   The entire culture dominant among web developers today is bizarrely framework-heavy, with seemingly no thought given to minimizing dependencies and page weight. \n \n\n But I think it’s a bit more subtle than that. As John Gruber says: \n\n \n   Business development deals have created problems that no web developer can solve. There’s no way to make a web page with a full-screen content-obscuring ad anything other than a shitty experience. \n \n\n  My least favorite online game these days: finding the “X\" that closes the nearly ubiquitous website popup for newsletter signup or video ad. — Jason Kottke (@jkottke) May 18, 2015 \n\n  How to browse the mobile web:\nNavigate to site\nClose modal popup (if you can)\nDecline native app offer\nClose top banner\nClose bottom banner — Justin Palmer (@Caged) April 21, 2015 \n\n Now you might be saying to yourself “Well, I’ve never made a bloated web page!” or “I’ve never slapped loads of intrusive crap over the content!” I’d certainly like to think that I can look at my track record and hold my head up reasonably high. But that doesn’t matter. If the overall perception is that going to a URL to read an article is a pain in the ass, it hurts all of us. \n\n Take this article from M.G. Siegler: \n\n \n   Not only is the web not fast enough for apps, it’s not fast enough for text either. …on mobile, the web browser just isn’t cutting it. … Native apps provide a better user experience on mobile than a web browser. \n \n\n On the face of it, this is kind of a bizarre claim. After all, there’s nothing inherent in web browsers that makes them slow at rendering text—quite the opposite! And native apps still use HTTP (and often HTML) to fetch content; the network doesn’t suddenly get magically faster just because the piece of software requesting a resource doesn’t happen to be a web browser. \n\n But this conflation of slow websites and slow web browsers is perfectly understandable. If it looks like a slow duck, and it quacks like a slow duck, then why not conclude that ducks are slow? Even if we know that there’s nothing inherently slow about making web pages: \n\n  You don’t need Facebook to deliver your text faster than you can. Remove all unnecessary cruft and make your site blazing fast. — Nat Buckley (@thatnatbuckley) May 15, 2015 \n\n My hope is that Facebook Instant will shake things up a bit. M.G. Siegler again: \n\n \n   At the very least, Facebook has put everyone else on notice. Your content better load fast or you’re screwed. Publication websites have become an absolutely bloated mess. They range from beautiful (The Verge) to atrocious (Bloomberg) to unusable (Forbes). The common denominator: they’re all way too slow. \n \n\n There needs to be a cultural change in how we approach building for the web. Yes, some of the tools we choose are part of the problem, but the bigger problem is that performance still isn’t being recognised as the most important factor in how people feel about websites (and by extension, the web). This isn’t just a developer issue. It’s a design issue. It’s a UX issue. It’s a business issue. Performance is everybody’s collective responsibility. \n\n I’d better stop now before I start getting all ranty again. \n\n I’ll leave you with some other writings on this topic… \n\n Tim Kadlec talks about choosing performance: \n\n \n   It’s not because of any sort of technical limitations. No, if a website is slow it’s because performance was not prioritized. It’s because when push came to shove, time and resources were spent on other features of a site and not on making sure that site loads quickly. \n \n\n Jim Ray points out that “we learned the wrong lesson from the rise of mobile and the app ecosystem”: \n\n \n   We’ve spent far too long trying to compete with native experiences by making our websites look and behave like apps. This includes not just thousands of lines of JavaScript to mimic native app swipes and scrolling but even the lower overhead aesthetics of fixed position headers and persistent navigation. \n \n\n (*cough*Flipboard*cough*) \n\n Finally, Baldur Bjarnason has written a terrific piece: \n\n \n   The web doesn’t suck. Your websites suck. \n\n   All of your websites suck. \n\n   You destroy basic usability by hijacking the scrollbar. You take native functionality (scrolling, selection, links, loading) that is fast and efficient and you rewrite it with ‘cutting edge’ javascript toolkits and frameworks so that it is slow and buggy and broken. You balloon your websites with megabytes of cruft. You ignore best practices. You take something that works and is complementary to your business and turn it into a liability. \n\n   The lousy performance of your websites becomes a defensive moat around Facebook. \n \n\n Go read the whole thing—it’s terrific: \n\n \n   This is a long-standing debate. Except it’s only long-standing among web developers. Columnists, managers, pundits, and journalists seem to have no interest in understanding the technical foundation of their livelihoods. Instead they are content with assuming that Facebook can somehow magically render HTML over HTTP faster than anybody else and there is nothing anybody can do to make their crap scroll-jacking websites faster. They buy into the myth that the web is incapable of delivering on its core capabilities: delivering hypertext and images quickly to a diverse and connected readership.\n"
    ],
    "author": [
      "https://adactio.com"
    ]
  }
}