{
  "type": [
    "h-entry"
  ],
  "properties": {
    "content": [
      "I've just set up SSL image proxying on my website through [camo](https://github.com/atmos/camo) to make sure any external non-https images are served via https. Camo is a simple HTTP proxy that also encrypts URLs with HMAC to prevent someone piggy-backing off your service. \n\nCurrently running nicely through Heroku using their wildcard SSL herokuapp.com certificate. My first time using a [\"Deploy to Heroku\" button](https://blog.heroku.com/archives/2014/8/7/heroku-button) which made this ridiculously easy to get set up. \n\nI now wrap external (http) image URLs on here with `camo_image()`:\n\n    # from https://github.com/atmos/camo/blob/master/test/proxy_test.rb\n\n    def hexenc(image_url)\n      image_url.to_enum(:each_byte).map { |byte| \"%02x\" % byte }.join\n    end\n\n    def camo_image(image_url)\n      hexdigest = OpenSSL::HMAC.hexdigest(OpenSSL::Digest::Digest.new(\"sha1\"), CAMO_KEY, image_url)\n      encoded_image_url = hexenc(image_url)\n      \"#{CAMO_URL}/#{hexdigest}/#{encoded_image_url}\"\n    end\n\n[You can see it in action here](https://barryfrost.com/2015/01/11-124917).\n"
    ],
    "published": [
      "2015-01-14T22:10:43Z"
    ],
    "entry-type": [
      "article"
    ],
    "name": [
      "Using camo for SSL image proxying"
    ],
    "category": [
      "moof",
      "ssl",
      "https",
      "proxy"
    ],
    "slug": [
      "i-ve-just-set-up-ssl"
    ]
  }
}