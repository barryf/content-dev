{
  "type": [
    "h-cite"
  ],
  "properties": {
    "url": [
      "https://snarfed.org/2015-01-22_pesos-for-bridgy-publish"
    ],
    "published": [
      "2015-01-23T02:52:30Z"
    ],
    "content": [
      "POSSEing silo interactions is\ngetting harder by the day,\nand Bridgy Publish is suffering as a\nresult. We could fix this by adding an\nOwnYourGram-style\nPESOS option. Should we? \n\n If you’re going to own your posts on social\nnetworks, indieweb people\nprefer to POSSE: post on your own\nsite, syndicate elsewhere. Bridgy Publish\nfollows this philosophy and provides POSSE as a service. \n\n POSSE has its disadvantages though. The Twitter app, for example, lets you\nfavorite a tweet with a single tap and ~100ms latency. Best of breed mobile\nindieweb approaches can’t touch that right now. Mine, for example, take\nmany more taps\nand 10-20s. Browser-based implementations and\nwebactions are a bit better, but not\nmuch. \n\n The silos don’t even allow POSSEing\ninteractions consistently, if at all.\nFacebook’s 2.0 API often\nprevents commenting,\nliking,\nand resharing.\nInstagram’s API\nsupports liking but not commenting.\nGoogle+’s API is read only, full\nstop. Twitter has a fairly complete write API, but must be taken with a\ngrain of salt. \n\n \n  \n\n Proposal: what if we added a Bridgy Publish PESOS option alongside the current\nPOSSE model? \n\n The arguments for POSSE and\nagainst PESOS are well founded.\nThey’re also aimed primarily at posts, not interactions. For interactions with\nsingle silo posts, especially likes and reposts – which rarely include additional\ncontent – PESOS ain’t so bad, and it comes with two big benefits: \n\n \n Full support for all interactions in all silos. \n Use the silos’ native UXes (often single-tap and low latency), databases\n(venues, contacts, etc.), and other features (e.g. character counting) for free.\nNo need to reimplement them or bolt them onto your own site. \n \n\n Some of the PESOS drawbacks\nstill apply. It enables silo-first authoring and presentation and may discourage\nindie and cross-silo interactions. Those would be just as doable, though, since\nwe’d keep the current POSSE functionality. \n\n This would be a big project, but it’s doable. Bridgy would watch your silo\naccount for replies, likes, and reshares that it didn’t create. When it sees\none, it creates a matching original post on your site, via\nmicropub or whatever. (I despair at implementing even\njust the token management,\nmuch less a full micropub client, but those are literally implementation\ndetails.) \n\n Thoughts?\n"
    ],
    "author": [
      "https://snarfed.org/"
    ]
  }
}